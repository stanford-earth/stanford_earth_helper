<?php

/**
 * @file
 * File description.
 *
 * Long description.
 */

use Drupal\migrate\Plugin\MigrationInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\migrate\Row;
use Drupal\migrate\Plugin\MigrateSourceInterface;
use Drupal\stanford_earth_events\Controller\StanfordEarthEventsController;
use Drupal\stanford_earth_events\EarthEventsInfo;

/**
 * Implements hook_entity_delete().
 */
function stanford_earth_events_entity_delete(EntityInterface $entity) {

  // Only do this for stanford_event content.
  if ($entity->bundle() !== 'stanford_event') {
    return;
  }

  // Delete record from events info table.
  EarthEventsInfo::delete($entity->id());

  // Delete records from migration maps.
  $database = \Drupal::database();
  $eventTables = $database->schema()->findTables('migrate_map_earth_events_importer_%');
  foreach ($eventTables as $table) {
    if (strpos($table, "process") === FALSE) {
      if ($database->schema()->tableExists($table)) {
        $database->delete($table)
          ->condition('destid1', $entity->id())
          ->execute();
      }
    }
  }
}

/**
 * Implements hook_cron().
 */
function stanford_earth_events_cron() {
  $rtime = \Drupal\Component\Datetime\DateTimePlus::createFromTimestamp(
    \Drupal::time()->getRequestTime(),
    "America/Los_Angeles"
  );
  \Drupal::logger('cron')->info('Request time: ' . $rtime->format("D M d Y H:i:s T"));
  $hour = $rtime->format("H");
  if ($hour == "08" || $hour == "12" || $hour == "16" || $hour == "20") {
    $container = \Drupal::getContainer();
    $controller = new StanfordEarthEventsController(
      $container->get('plugin.manager.migration'),
      $container->get('database'),
      $container->get('config.factory'),
      $container->get('entity_type.manager')
    );
    $controller->importEvents();
  }
}

/**
 * {@inheritdoc}
 */
function stanford_earth_events_migrate_prepare_row(Row $row, MigrateSourceInterface $source, MigrationInterface $migration) {
  if (substr($migration->id(), 0, 21) === 'earth_events_importer') {
    $event_status = $row->getSourceProperty('field_event_status');
    if ($event_status == 'Unlisted') {
      $row->setSourceProperty('status_code', '0');
    }
    elseif ($event_status == 'CANCELED') {
      $event = new EarthEventsInfo($row->getSourceProperty('guid'));
      if ($event->isUnlisted()) {
        $row->setSourceProperty('status_code', '0');
      }
      else {
        $row->setSourceProperty('status_code', '1');
      }
    }
    else {
      $row->setSourceProperty('status_code', '1');
    }
  }
  return TRUE;
}
