<?php

/**
 * @file
 * Implements Drupal hooks for stanford_earth_capx module.
 */

use Drupal\migrate\Plugin\MigrationInterface;
use Drupal\migrate\Row;
use Drupal\migrate\Plugin\MigrateSourceInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\stanford_earth_capx\EarthCapxInfo;

/**
 * Implements hook_entity_delete().
 */
function stanford_earth_capx_entity_delete(EntityInterface $entity) {

  // Only do this for user content.
  if ($entity->bundle() !== 'user') {
    return;
  }

  // Delete record from capx info table.
  EarthCapxInfo::delete($entity->id());

  // Delete record from migration map table.
  $database = \Drupal::database();
  $table = 'migrate_map_earth_capx_importer';
  if ($database->schema()->tableExists($table)) {
    $database->delete($table)
      ->condition('destid1', $entity->id())
      ->execute();
  }
}

/**
 * Implements hook_migrate_prepare_row().
 */
function stanford_earth_capx_migrate_prepare_row(Row $row, MigrateSourceInterface $source, MigrationInterface $migration) {

  // We need to clean up the phones data from the CAP API since it's an
  // array without keys. This is where we rewrite the array.
  // This hook gets called for every migration so check that it's the CAP-X one.
  if (substr($migration->id(), 0, 19) === 'earth_capx_importer') {

    set_time_limit(30);
    $email_test = $row->getSourceProperty("email");
    if (empty($email_test)) {
      $row->setSourceProperty('email', $row->getSourceProperty('sunetid') .
        '@stanford.edu');
    }

    $phones = $row->getSourceProperty('phone');
    $newphones = [];
    if (!empty($phones) && is_array($phones)) {
      $newphones = [];
      foreach ($phones as $ph) {
        $newphones[] = ['phone' => $ph];
      }
    }
    $row->setSourceProperty('phone', $newphones);

    // If the user account already exists, set its id in the row data.
    $sunetid = $row->getSourceProperty('sunetid');
    if (!empty($sunetid)) {

      $sunetuser = user_load_by_name($sunetid);
      if (!empty($sunetuser)) {
        $entityid = intval($sunetuser->id());
        $row->setSourceProperty('uid', $entityid);
        $row->setDestinationProperty('uid', $entityid);
        if (empty($sunetuser->getEmail())) {
          $row->setSourceProperty('updateemail', 1);
        }
      }
    }
  }
  return TRUE;

}

/**
 * Implements hook_batch_alter().
 */
function stanford_earth_capx_batch_alter(&$batch) {

  foreach ($batch['sets'] as $key => $set) {
    $op_array = reset($set['operations']);
    $migration_id = reset($op_array[1]);
    if (is_string($migration_id) &&
      strpos($migration_id, 'earth_capx_importer_') !== FALSE) {
      if (empty($set['sandbox'])) {
        $batch['sets'][$key]['sandbox'] = [
          'total' => 200,
          'counter' => 0,
          'batch_limit' => 200,
          'operation' => 1,
        ];
      }
      if (empty($set['results'])) {
        $batch['sets'][$key]['results'][$migration_id] = [
          '@numitems' => 0,
          '@created' => 0,
          '@updated' => 0,
          '@failures' => 0,
          '@ignored' => 0,
          '@name' => $migration_id,
        ];
      }
    }
  }

}
